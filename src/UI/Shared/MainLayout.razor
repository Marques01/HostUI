@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject TokenAuthenticationProvider _authServices
@inject NavigationManager _navigationManager
@inject IJSRuntime _js
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>

        <div class="top-row px-4">
            <AuthorizeView>
                <Authorized>
                    <button type="button" class="btn btn-link" data-bs-toggle="modal" data-bs-target="#LogoutModal">
                        Logout
                    </button>
                </Authorized>
                <NotAuthorized>
                    <button type="button" class="btn btn-link" @onclick="Login">Login</button>
                </NotAuthorized>
            </AuthorizeView>            
        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<!-- Modal -->
<div class="modal fade" id="LogoutModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Deseja realmente fazer logout?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="Logout">Sim</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Não</button>
            </div>
        </div>
    </div>
</div>

@code {    
    private void Login()
    {
        _navigationManager.NavigateTo("/login");
    }

    private async Task Logout()
    {
        await _authServices.Logout();       

        _navigationManager.NavigateTo("/");
    }   
}